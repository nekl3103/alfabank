module.exports = {
  env: {
    browser: true,
    es2021: true,
  },
  extends: [
    'airbnb-typescript',
    'airbnb/hooks',
    'plugin:@typescript-eslint/recommended',
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: './tsconfig.json',
    ecmaVersion: 2018,
    sourceType: 'module',
    ecmaFeatures: {
      jsx: true,
    },
    createDefaultProgram: true,
  },
  plugins: [
    '@typescript-eslint',
    'react-hooks',
    'react',
    'import',
  ],
  settings: {
    'import/resolver': {
      node: {
        moduleDirectory: ['node_modules', 'src/'],
      },
      typescript: {
        alwaysTryTypes: true,
      },
    },
  },
  rules: {
    quotes: ['warn', 'single', { avoidEscape: true }],
    'comma-dangle': ['warn', 'always-multiline'],
    'comma-spacing': ['warn', { before: false, after: true }],
    'comma-style': ['warn', 'last'],
    'computed-property-spacing': ['warn', 'never'],
    'func-call-spacing': ['warn', 'never'],
    indent: ['error', 2, { SwitchCase: 1 }],
    'key-spacing': ['warn'],
    'no-trailing-spaces': ['warn'],
    'no-whitespace-before-property': ['warn'],
    'padding-line-between-statements': [
      'warn',
      { blankLine: 'always', prev: ['const', 'let', 'var'], next: '*' },
      { blankLine: 'always', prev: '*', next: 'return' },
      { blankLine: 'any', prev: ['const', 'let', 'var'], next: ['const', 'let', 'var'] },
    ],
    'quote-props': ['warn', 'as-needed'],
    semi: ['warn'],
    'semi-spacing': ['warn'],
    'semi-style': ['warn'],
    'space-before-blocks': ['warn'],
    'space-in-parens': ['warn'],
    'space-infix-ops': ['warn'],
    'space-unary-ops': ['warn'],
    'switch-colon-spacing': ['warn'],
    'no-shadow': 'off',

    'operator-linebreak': 'off',
    'implicit-arrow-linebreak': 'off',
    'max-len': 'off',

    'no-plusplus': ['error', { allowForLoopAfterthoughts: true }],
    'no-negated-condition': 'warn',
    'default-case': 'off',
    'no-use-before-define': 'off',

    complexity: ['warn', 20],
    'max-nested-callbacks': 'warn',
    // React
    'react/jsx-indent': ['warn', 2],
    'react/jsx-indent-props': ['warn', 2],
    'react/jsx-curly-spacing': ['warn', { when: 'always', children: true }],
    'react/jsx-fragments': ['warn', 'element'],
    'react/static-property-placement': ['error', 'static public field'],
    'react/state-in-constructor': ['error', 'never'],
    'react/prop-types': 'off',
    'react/sort-comp': 'off',
    'react/require-default-props': 'off',
    'react/jsx-boolean-value': ['error', 'always'],
    'react/jsx-props-no-spreading': 'off',
    'react/prefer-stateless-function': 'off',
    'react/destructuring-assignment': 'off',
    'react/jsx-filename-extension': [1, { extensions: ['.jsx', '.tsx'] }],
    'react/jsx-one-expression-per-line': 'off',
    'react-hooks/exhaustive-deps': 'off',
    'jsx-a11y/click-events-have-key-events': 'off',
    'jsx-a11y/no-static-element-interactions': 'off',

    '@typescript-eslint/indent': [
      'warn',
      2,
      {
        SwitchCase: 1,
        ignoredNodes: ['TSTypeParameterInstantiation'],
      },
    ],
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/array-type': [
      'error',
      { default: 'array-simple', readonly: 'array-simple' },
    ],
    '@typescript-eslint/type-annotation-spacing': 'error',
    '@typescript-eslint/member-delimiter-style': 'error',
    '@typescript-eslint/consistent-type-assertions': 'error',
    '@typescript-eslint/no-array-constructor': 'error',
    '@typescript-eslint/no-empty-interface': 'error',
    '@typescript-eslint/no-shadow': 'warn',
    '@typescript-eslint/no-unused-vars': ['error', { ignoreRestSiblings: true }],
    '@typescript-eslint/no-use-before-define': [
      'error',
      { functions: false, classes: true, variables: true },
    ],
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-non-null-assertion': 'off',

    'import/no-extraneous-dependencies': [
      'error',
      { devDependencies: ['**/*.{stories,test,tests,spec}.{js,jsx,ts,tsx}'] },
    ],
    'import/no-cycle': 'off',
    'import/prefer-default-export': 'off',
    'import/no-unresolved': 'off',
    'import/extensions': 'off',
    'import/no-unresolved': [2, { commonjs: true, amd: true }],
    'import/named': 2,
    'import/namespace': 2,
    'import/default': 2,
    'import/export': 2,
  },
};
